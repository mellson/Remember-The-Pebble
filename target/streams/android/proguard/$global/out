[0m[[0mdebug[0m] [0m# for debugging, don't inline methods[0m
[0m[[0mdebug[0m] [0m#-dontoptimize[0m
[0m[[0mdebug[0m] [0m#-optimizationpasses 5[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-dontobfuscate[0m
[0m[[0mdebug[0m] [0m-dontoptimize[0m
[0m[[0mdebug[0m] [0m-renamesourcefileattribute SourceFile[0m
[0m[[0mdebug[0m] [0m-keepattributes SourceFile,LineNumberTable[0m
[0m[[0mdebug[0m] [0m-verbose[0m
[0m[[0mdebug[0m] [0m-flattenpackagehierarchy[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m###[0m
[0m[[0mdebug[0m] [0m# Android config[0m
[0m[[0mdebug[0m] [0m###[0m
[0m[[0mdebug[0m] [0m-dontusemixedcaseclassnames[0m
[0m[[0mdebug[0m] [0m-dontskipnonpubliclibraryclasses[0m
[0m[[0mdebug[0m] [0m-dontpreverify[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# optimizations don't really work with dex, don't bother[0m
[0m[[0mdebug[0m] [0m#-optimizations !code/simplification/arithmetic,!code/simplification/cast,!field/*,!class/merging/*[0m
[0m[[0mdebug[0m] [0m#-optimizationpasses 5[0m
[0m[[0mdebug[0m] [0m#-allowaccessmodification[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepattributes *Annotation*[0m
[0m[[0mdebug[0m] [0m-keep public class com.google.vending.licensing.ILicensingService[0m
[0m[[0mdebug[0m] [0m-keep public class com.android.vending.licensing.ILicensingService[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclasseswithmembernames class * {[0m
[0m[[0mdebug[0m] [0m    native <methods>;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# We want to keep methods in Activity that could be used in the XML attribute onClick[0m
[0m[[0mdebug[0m] [0m-keepclassmembers class * extends android.app.Activity {[0m
[0m[[0mdebug[0m] [0m   public void *(android.view.View);[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations[0m
[0m[[0mdebug[0m] [0m-keepclassmembers enum * {[0m
[0m[[0mdebug[0m] [0m    public static **[] values();[0m
[0m[[0mdebug[0m] [0m    public static ** valueOf(java.lang.String);[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keep class * implements android.os.Parcelable {[0m
[0m[[0mdebug[0m] [0m  public static final android.os.Parcelable$Creator *;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-dontnote android.annotation.**[0m
[0m[[0mdebug[0m] [0m-dontnote com.android.vending.licensing.**[0m
[0m[[0mdebug[0m] [0m-dontnote com.google.vending.licensing.**[0m
[0m[[0mdebug[0m] [0m-dontwarn android.support.**[0m
[0m[[0mdebug[0m] [0m-dontnote android.support.**[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# keep setters in Views so that animations can still work.[0m
[0m[[0mdebug[0m] [0m# see http://proguard.sourceforge.net/manual/examples.html#beans[0m
[0m[[0mdebug[0m] [0m-keepclassmembers public class * extends android.view.View {[0m
[0m[[0mdebug[0m] [0m   void set*(***);[0m
[0m[[0mdebug[0m] [0m   *** get*();[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembers class **.R$* {[0m
[0m[[0mdebug[0m] [0m    public static <fields>;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m###[0m
[0m[[0mdebug[0m] [0m# Scala proguard config[0m
[0m[[0mdebug[0m] [0m###[0m
[0m[[0mdebug[0m] [0m-dontnote org.xml.sax.EntityResolver[0m
[0m[[0mdebug[0m] [0m-dontnote scala.concurrent.forkjoin.**[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.beans.ScalaBeanInfo[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.concurrent.**[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.reflect.**[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.sys.process.package$[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-dontwarn **$$anonfun$*[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.collection.immutable.RedBlack$Empty[0m
[0m[[0mdebug[0m] [0m-dontwarn scala.tools.**,plugintemplate.**[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keep public class scala.reflect.ScalaSignature[0m
[0m[[0mdebug[0m] [0m-keep public interface scala.ScalaObject[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembers class * {[0m
[0m[[0mdebug[0m] [0m    ** MODULE$;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keep class scala.collection.SeqLike {[0m
[0m[[0mdebug[0m] [0m    public java.lang.String toString();[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {[0m
[0m[[0mdebug[0m] [0m    long eventCount;[0m
[0m[[0mdebug[0m] [0m    int  workerCounts;[0m
[0m[[0mdebug[0m] [0m    int  runControl;[0m
[0m[[0mdebug[0m] [0m    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;[0m
[0m[[0mdebug[0m] [0m    scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {[0m
[0m[[0mdebug[0m] [0m    int base;[0m
[0m[[0mdebug[0m] [0m    int sp;[0m
[0m[[0mdebug[0m] [0m    int runState;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {[0m
[0m[[0mdebug[0m] [0m    int status;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {[0m
[0m[[0mdebug[0m] [0m    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;[0m
[0m[[0mdebug[0m] [0m    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;[0m
[0m[[0mdebug[0m] [0m    scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;[0m
[0m[[0mdebug[0m] [0m}[0m
[0m[[0mdebug[0m] [0m# To enable ProGuard in your project, edit project.properties[0m
[0m[[0mdebug[0m] [0m# to define the proguard.config property as described in that file.[0m
[0m[[0mdebug[0m] [0m#[0m
[0m[[0mdebug[0m] [0m# Add project specific ProGuard rules here.[0m
[0m[[0mdebug[0m] [0m# By default, the flags in this file are appended to flags specified[0m
[0m[[0mdebug[0m] [0m# in ${sdk.dir}/tools/proguard/proguard-android.txt[0m
[0m[[0mdebug[0m] [0m# You can edit the include path and order by changing the ProGuard[0m
[0m[[0mdebug[0m] [0m# include property in project.properties.[0m
[0m[[0mdebug[0m] [0m#[0m
[0m[[0mdebug[0m] [0m# For more details, see[0m
[0m[[0mdebug[0m] [0m#   http://developer.android.com/guide/developing/tools/proguard.html[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# Add any project specific keep options here:[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# If your project uses WebView with JS, uncomment the following[0m
[0m[[0mdebug[0m] [0m# and specify the fully qualified class name to the JavaScript interface[0m
[0m[[0mdebug[0m] [0m# class:[0m
[0m[[0mdebug[0m] [0m#-keepclassmembers class fqcn.of.javascript.interface.for.webview {[0m
[0m[[0mdebug[0m] [0m#   public *;[0m
[0m[[0mdebug[0m] [0m#}[0m
[0m[[0mdebug[0m] [0m# view AndroidManifest.xml #generated:12[0m
[0m[[0mdebug[0m] [0m-keep class android.test.InstrumentationTestRunner { <init>(...); }[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m# view AndroidManifest.xml #generated:5[0m
[0m[[0mdebug[0m] [0m-keep class dk.itu.rtp.JavaActivity { <init>(...); }[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0m-libraryjars[0m
[0m[[0mdebug[0m] [0m/Users/anbh/android sdk/platforms/android-14/android.jar[0m
[0m[[0mdebug[0m] [0m-printmapping[0m
[0m[[0mdebug[0m] [0m/Users/anbh/Desktop/Git/Remember The Pebble/bin/mappings.txt[0m
[0m[[0mdebug[0m] [0m-injars /Users/anbh/.sbt/boot/scala-2.10.3/lib/scala-library.jar(!META-INF/**,!rootdoc.txt):/Users/anbh/Desktop/Git/Remember The Pebble/bin/classes.jar(!META-INF/**,!rootdoc.txt)[0m
[0m[[0mdebug[0m] [0m-outjars /Users/anbh/Desktop/Git/Remember The Pebble/bin/classes.proguard.jar[0m
[0m[[0minfo[0m] [0mCreating proguard cache: proguard-cache-0b1c0b4caa4e5179cd6e551ff7b90ccd3d276a7e.jar[0m
